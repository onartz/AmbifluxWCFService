#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34209
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmbifluxWcfService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AIPL")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertWorkOrderStatus(WorkOrderStatus instance);
    partial void UpdateWorkOrderStatus(WorkOrderStatus instance);
    partial void DeleteWorkOrderStatus(WorkOrderStatus instance);
    partial void InsertWorkOrder(WorkOrder instance);
    partial void UpdateWorkOrder(WorkOrder instance);
    partial void DeleteWorkOrder(WorkOrder instance);
    partial void InsertWorkOrderRouting(WorkOrderRouting instance);
    partial void UpdateWorkOrderRouting(WorkOrderRouting instance);
    partial void DeleteWorkOrderRouting(WorkOrderRouting instance);
    partial void InsertProductInventory(ProductInventory instance);
    partial void UpdateProductInventory(ProductInventory instance);
    partial void DeleteProductInventory(ProductInventory instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertOrderHeader(OrderHeader instance);
    partial void UpdateOrderHeader(OrderHeader instance);
    partial void DeleteOrderHeader(OrderHeader instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AIPLConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vEmployee> vEmployee
		{
			get
			{
				return this.GetTable<vEmployee>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contact
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderStatus> WorkOrderStatus
		{
			get
			{
				return this.GetTable<WorkOrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrder> WorkOrder
		{
			get
			{
				return this.GetTable<WorkOrder>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderRouting> WorkOrderRouting
		{
			get
			{
				return this.GetTable<WorkOrderRouting>();
			}
		}
		
		public System.Data.Linq.Table<ProductInventory> ProductInventory
		{
			get
			{
				return this.GetTable<ProductInventory>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resource
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<OrderHeader> OrderHeader
		{
			get
			{
				return this.GetTable<OrderHeader>();
			}
		}
		
		public System.Data.Linq.Table<Location> Location
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<V_Order> V_Order
		{
			get
			{
				return this.GetTable<V_Order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vEmployee")]
	public partial class vEmployee
	{
		
		private int _ResourceID;
		
		private string _CardID;
		
		private System.Nullable<int> _ResourceStatusId;
		
		private string _Login;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _EmailAddress;
		
		private string _Phone;
		
		public vEmployee()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="Int NOT NULL")]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this._ResourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(50)")]
		public string CardID
		{
			get
			{
				return this._CardID;
			}
			set
			{
				if ((this._CardID != value))
				{
					this._CardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceStatusId", DbType="Int")]
		public System.Nullable<int> ResourceStatusId
		{
			get
			{
				return this._ResourceStatusId;
			}
			set
			{
				if ((this._ResourceStatusId != value))
				{
					this._ResourceStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(32)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this._Login = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(64)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContactID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _EmailAddress;
		
		private string _Phone;
		
		private EntitySet<Customer> _Customer;
		
		private EntitySet<Resource> _Resource;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactIDChanging(int value);
    partial void OnContactIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Contact()
		{
			this._Customer = new EntitySet<Customer>(new Action<Customer>(this.attach_Customer), new Action<Customer>(this.detach_Customer));
			this._Resource = new EntitySet<Resource>(new Action<Resource>(this.attach_Resource), new Action<Resource>(this.detach_Resource));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(64)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(25)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Customer", Storage="_Customer", ThisKey="ContactID", OtherKey="ContactID")]
		public EntitySet<Customer> Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				this._Customer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Resource", Storage="_Resource", ThisKey="ContactID", OtherKey="ContactID")]
		public EntitySet<Resource> Resource
		{
			get
			{
				return this._Resource;
			}
			set
			{
				this._Resource.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Customer(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_Resource(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Resource(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private char _CustomerType;
		
		private string _AccountNo;
		
		private System.Nullable<int> _ContactID;
		
		private string _UserName;
		
		private EntitySet<OrderHeader> _OrderHeader;
		
		private EntityRef<Contact> _Contact;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerTypeChanging(char value);
    partial void OnCustomerTypeChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnContactIDChanging(System.Nullable<int> value);
    partial void OnContactIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public Customer()
		{
			this._OrderHeader = new EntitySet<OrderHeader>(new Action<OrderHeader>(this.attach_OrderHeader), new Action<OrderHeader>(this.detach_OrderHeader));
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerType", DbType="Char(1) NOT NULL")]
		public char CustomerType
		{
			get
			{
				return this._CustomerType;
			}
			set
			{
				if ((this._CustomerType != value))
				{
					this.OnCustomerTypeChanging(value);
					this.SendPropertyChanging();
					this._CustomerType = value;
					this.SendPropertyChanged("CustomerType");
					this.OnCustomerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", AutoSync=AutoSync.Always, DbType="VarChar(11) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="Int")]
		public System.Nullable<int> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_OrderHeader", Storage="_OrderHeader", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<OrderHeader> OrderHeader
		{
			get
			{
				return this._OrderHeader;
			}
			set
			{
				this._OrderHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Customer", Storage="_Contact", ThisKey="ContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Customer.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Customer.Add(this);
						this._ContactID = value.ContactID;
					}
					else
					{
						this._ContactID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderHeader(OrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_OrderHeader(OrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderStatus")]
	public partial class WorkOrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkOrderStatusID;
		
		private string _Value;
		
		private EntitySet<WorkOrder> _WorkOrder;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkOrderStatusIDChanging(int value);
    partial void OnWorkOrderStatusIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public WorkOrderStatus()
		{
			this._WorkOrder = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrder), new Action<WorkOrder>(this.detach_WorkOrder));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkOrderStatusID
		{
			get
			{
				return this._WorkOrderStatusID;
			}
			set
			{
				if ((this._WorkOrderStatusID != value))
				{
					this.OnWorkOrderStatusIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderStatusID = value;
					this.SendPropertyChanged("WorkOrderStatusID");
					this.OnWorkOrderStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderStatus_WorkOrder", Storage="_WorkOrder", ThisKey="WorkOrderStatusID", OtherKey="WorkOrderStatusID")]
		public EntitySet<WorkOrder> WorkOrder
		{
			get
			{
				return this._WorkOrder;
			}
			set
			{
				this._WorkOrder.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrder(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderStatus = this;
		}
		
		private void detach_WorkOrder(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrderStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrder")]
	public partial class WorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkOrderID;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _OrderID;
		
		private string _WorkOrderNo;
		
		private System.Nullable<int> _WorkOrderStatusID;
		
		private string _Type;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<int> _FinishedStateId;
		
		private EntityRef<WorkOrder> _WorkOrder2;
		
		private EntitySet<WorkOrderRouting> _WorkOrderRouting;
		
		private EntityRef<WorkOrder> _WorkOrder1;
		
		private EntityRef<WorkOrderStatus> _WorkOrderStatus;
		
		private EntityRef<OrderHeader> _OrderHeader;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkOrderIDChanging(int value);
    partial void OnWorkOrderIDChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnWorkOrderNoChanging(string value);
    partial void OnWorkOrderNoChanged();
    partial void OnWorkOrderStatusIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderStatusIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnFinishedStateIdChanging(System.Nullable<int> value);
    partial void OnFinishedStateIdChanged();
    #endregion
		
		public WorkOrder()
		{
			this._WorkOrder2 = default(EntityRef<WorkOrder>);
			this._WorkOrderRouting = new EntitySet<WorkOrderRouting>(new Action<WorkOrderRouting>(this.attach_WorkOrderRouting), new Action<WorkOrderRouting>(this.detach_WorkOrderRouting));
			this._WorkOrder1 = default(EntityRef<WorkOrder>);
			this._WorkOrderStatus = default(EntityRef<WorkOrderStatus>);
			this._OrderHeader = default(EntityRef<OrderHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._OrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderNo", AutoSync=AutoSync.Always, DbType="VarChar(11) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string WorkOrderNo
		{
			get
			{
				return this._WorkOrderNo;
			}
			set
			{
				if ((this._WorkOrderNo != value))
				{
					this.OnWorkOrderNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderNo = value;
					this.SendPropertyChanged("WorkOrderNo");
					this.OnWorkOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderStatusID", DbType="Int")]
		public System.Nullable<int> WorkOrderStatusID
		{
			get
			{
				return this._WorkOrderStatusID;
			}
			set
			{
				if ((this._WorkOrderStatusID != value))
				{
					if (this._WorkOrderStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderStatusIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderStatusID = value;
					this.SendPropertyChanged("WorkOrderStatusID");
					this.OnWorkOrderStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Char(3)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedStateId", DbType="Int")]
		public System.Nullable<int> FinishedStateId
		{
			get
			{
				return this._FinishedStateId;
			}
			set
			{
				if ((this._FinishedStateId != value))
				{
					this.OnFinishedStateIdChanging(value);
					this.SendPropertyChanging();
					this._FinishedStateId = value;
					this.SendPropertyChanged("FinishedStateId");
					this.OnFinishedStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrder", Storage="_WorkOrder2", ThisKey="WorkOrderID", OtherKey="WorkOrderID", IsUnique=true, IsForeignKey=false)]
		public WorkOrder WorkOrder2
		{
			get
			{
				return this._WorkOrder2.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder2.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder2.Entity = null;
						previousValue.WorkOrder1 = null;
					}
					this._WorkOrder2.Entity = value;
					if ((value != null))
					{
						value.WorkOrder1 = this;
					}
					this.SendPropertyChanged("WorkOrder2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderRouting", Storage="_WorkOrderRouting", ThisKey="WorkOrderID", OtherKey="WorkOrderID")]
		public EntitySet<WorkOrderRouting> WorkOrderRouting
		{
			get
			{
				return this._WorkOrderRouting;
			}
			set
			{
				this._WorkOrderRouting.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrder", Storage="_WorkOrder1", ThisKey="WorkOrderID", OtherKey="WorkOrderID", IsForeignKey=true)]
		public WorkOrder WorkOrder1
		{
			get
			{
				return this._WorkOrder1.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder1.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder1.Entity = null;
						previousValue.WorkOrder2 = null;
					}
					this._WorkOrder1.Entity = value;
					if ((value != null))
					{
						value.WorkOrder2 = this;
						this._WorkOrderID = value.WorkOrderID;
					}
					else
					{
						this._WorkOrderID = default(int);
					}
					this.SendPropertyChanged("WorkOrder1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderStatus_WorkOrder", Storage="_WorkOrderStatus", ThisKey="WorkOrderStatusID", OtherKey="WorkOrderStatusID", IsForeignKey=true)]
		public WorkOrderStatus WorkOrderStatus
		{
			get
			{
				return this._WorkOrderStatus.Entity;
			}
			set
			{
				WorkOrderStatus previousValue = this._WorkOrderStatus.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrderStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderStatus.Entity = null;
						previousValue.WorkOrder.Remove(this);
					}
					this._WorkOrderStatus.Entity = value;
					if ((value != null))
					{
						value.WorkOrder.Add(this);
						this._WorkOrderStatusID = value.WorkOrderStatusID;
					}
					else
					{
						this._WorkOrderStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrderStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderHeader_WorkOrder", Storage="_OrderHeader", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public OrderHeader OrderHeader
		{
			get
			{
				return this._OrderHeader.Entity;
			}
			set
			{
				OrderHeader previousValue = this._OrderHeader.Entity;
				if (((previousValue != value) 
							|| (this._OrderHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderHeader.Entity = null;
						previousValue.WorkOrder.Remove(this);
					}
					this._OrderHeader.Entity = value;
					if ((value != null))
					{
						value.WorkOrder.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderRouting(WorkOrderRouting entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderRouting(WorkOrderRouting entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderRouting")]
	public partial class WorkOrderRouting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkOrderID;
		
		private short _OperationSequence;
		
		private int _LocationID;
		
		private System.Nullable<int> _ResourceID;
		
		private System.Nullable<System.DateTime> _ScheduledStartDate;
		
		private System.Nullable<System.DateTime> _ScheduledEndDate;
		
		private System.Nullable<System.DateTime> _ActualStartDate;
		
		private System.Nullable<System.DateTime> _ActualEndDate;
		
		private System.Nullable<decimal> _ActualResourceHrs;
		
		private System.Nullable<decimal> _PlannedCost;
		
		private System.Nullable<decimal> _ActualCost;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _WorkOrderRoutingStatusId;
		
		private System.Nullable<char> _Type;
		
		private string _WorkOrderRoutingNo;
		
		private System.Nullable<int> _StateID;
		
		private System.Nullable<int> _WorkOrderRoutingErrorID;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkOrderIDChanging(int value);
    partial void OnWorkOrderIDChanged();
    partial void OnOperationSequenceChanging(short value);
    partial void OnOperationSequenceChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnResourceIDChanging(System.Nullable<int> value);
    partial void OnResourceIDChanged();
    partial void OnScheduledStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnScheduledStartDateChanged();
    partial void OnScheduledEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnScheduledEndDateChanged();
    partial void OnActualStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStartDateChanged();
    partial void OnActualEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualEndDateChanged();
    partial void OnActualResourceHrsChanging(System.Nullable<decimal> value);
    partial void OnActualResourceHrsChanged();
    partial void OnPlannedCostChanging(System.Nullable<decimal> value);
    partial void OnPlannedCostChanged();
    partial void OnActualCostChanging(System.Nullable<decimal> value);
    partial void OnActualCostChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnWorkOrderRoutingStatusIdChanging(System.Nullable<int> value);
    partial void OnWorkOrderRoutingStatusIdChanged();
    partial void OnTypeChanging(System.Nullable<char> value);
    partial void OnTypeChanged();
    partial void OnWorkOrderRoutingNoChanging(string value);
    partial void OnWorkOrderRoutingNoChanged();
    partial void OnStateIDChanging(System.Nullable<int> value);
    partial void OnStateIDChanged();
    partial void OnWorkOrderRoutingErrorIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderRoutingErrorIDChanged();
    #endregion
		
		public WorkOrderRouting()
		{
			this._Location = default(EntityRef<Location>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationSequence", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short OperationSequence
		{
			get
			{
				return this._OperationSequence;
			}
			set
			{
				if ((this._OperationSequence != value))
				{
					this.OnOperationSequenceChanging(value);
					this.SendPropertyChanging();
					this._OperationSequence = value;
					this.SendPropertyChanged("OperationSequence");
					this.OnOperationSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL")]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="Int")]
		public System.Nullable<int> ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ScheduledStartDate
		{
			get
			{
				return this._ScheduledStartDate;
			}
			set
			{
				if ((this._ScheduledStartDate != value))
				{
					this.OnScheduledStartDateChanging(value);
					this.SendPropertyChanging();
					this._ScheduledStartDate = value;
					this.SendPropertyChanged("ScheduledStartDate");
					this.OnScheduledStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ScheduledEndDate
		{
			get
			{
				return this._ScheduledEndDate;
			}
			set
			{
				if ((this._ScheduledEndDate != value))
				{
					this.OnScheduledEndDateChanging(value);
					this.SendPropertyChanging();
					this._ScheduledEndDate = value;
					this.SendPropertyChanged("ScheduledEndDate");
					this.OnScheduledEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartDate
		{
			get
			{
				return this._ActualStartDate;
			}
			set
			{
				if ((this._ActualStartDate != value))
				{
					this.OnActualStartDateChanging(value);
					this.SendPropertyChanging();
					this._ActualStartDate = value;
					this.SendPropertyChanged("ActualStartDate");
					this.OnActualStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualEndDate
		{
			get
			{
				return this._ActualEndDate;
			}
			set
			{
				if ((this._ActualEndDate != value))
				{
					this.OnActualEndDateChanging(value);
					this.SendPropertyChanging();
					this._ActualEndDate = value;
					this.SendPropertyChanged("ActualEndDate");
					this.OnActualEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualResourceHrs", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> ActualResourceHrs
		{
			get
			{
				return this._ActualResourceHrs;
			}
			set
			{
				if ((this._ActualResourceHrs != value))
				{
					this.OnActualResourceHrsChanging(value);
					this.SendPropertyChanging();
					this._ActualResourceHrs = value;
					this.SendPropertyChanged("ActualResourceHrs");
					this.OnActualResourceHrsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlannedCost", DbType="Money")]
		public System.Nullable<decimal> PlannedCost
		{
			get
			{
				return this._PlannedCost;
			}
			set
			{
				if ((this._PlannedCost != value))
				{
					this.OnPlannedCostChanging(value);
					this.SendPropertyChanging();
					this._PlannedCost = value;
					this.SendPropertyChanged("PlannedCost");
					this.OnPlannedCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualCost", DbType="Money")]
		public System.Nullable<decimal> ActualCost
		{
			get
			{
				return this._ActualCost;
			}
			set
			{
				if ((this._ActualCost != value))
				{
					this.OnActualCostChanging(value);
					this.SendPropertyChanging();
					this._ActualCost = value;
					this.SendPropertyChanged("ActualCost");
					this.OnActualCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderRoutingStatusId", DbType="Int")]
		public System.Nullable<int> WorkOrderRoutingStatusId
		{
			get
			{
				return this._WorkOrderRoutingStatusId;
			}
			set
			{
				if ((this._WorkOrderRoutingStatusId != value))
				{
					this.OnWorkOrderRoutingStatusIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderRoutingStatusId = value;
					this.SendPropertyChanged("WorkOrderRoutingStatusId");
					this.OnWorkOrderRoutingStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Char(1)")]
		public System.Nullable<char> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderRoutingNo", AutoSync=AutoSync.Always, DbType="VarChar(14) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string WorkOrderRoutingNo
		{
			get
			{
				return this._WorkOrderRoutingNo;
			}
			set
			{
				if ((this._WorkOrderRoutingNo != value))
				{
					this.OnWorkOrderRoutingNoChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderRoutingNo = value;
					this.SendPropertyChanged("WorkOrderRoutingNo");
					this.OnWorkOrderRoutingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int")]
		public System.Nullable<int> StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderRoutingErrorID", DbType="Int")]
		public System.Nullable<int> WorkOrderRoutingErrorID
		{
			get
			{
				return this._WorkOrderRoutingErrorID;
			}
			set
			{
				if ((this._WorkOrderRoutingErrorID != value))
				{
					this.OnWorkOrderRoutingErrorIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderRoutingErrorID = value;
					this.SendPropertyChanged("WorkOrderRoutingErrorID");
					this.OnWorkOrderRoutingErrorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderRouting_Location", Storage="_Location", ThisKey="LocationID", OtherKey="LocationID", IsUnique=true, IsForeignKey=false)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.WorkOrderRouting = null;
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRouting = this;
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderRouting", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="WorkOrderID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderRouting.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRouting.Add(this);
						this._WorkOrderID = value.WorkOrderID;
					}
					else
					{
						this._WorkOrderID = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductInventory")]
	public partial class ProductInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _LocationID;
		
		private int _Capacity;
		
		private System.Nullable<int> _SupplyThreshold;
		
		private System.Nullable<int> _DeliverThreshold;
		
		private string _Shelf;
		
		private System.Nullable<byte> _Bin;
		
		private short _Quantity;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Location> _Location;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnCapacityChanging(int value);
    partial void OnCapacityChanged();
    partial void OnSupplyThresholdChanging(System.Nullable<int> value);
    partial void OnSupplyThresholdChanged();
    partial void OnDeliverThresholdChanging(System.Nullable<int> value);
    partial void OnDeliverThresholdChanged();
    partial void OnShelfChanging(string value);
    partial void OnShelfChanged();
    partial void OnBinChanging(System.Nullable<byte> value);
    partial void OnBinChanged();
    partial void OnQuantityChanging(short value);
    partial void OnQuantityChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductInventory()
		{
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Int NOT NULL")]
		public int Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplyThreshold", DbType="Int")]
		public System.Nullable<int> SupplyThreshold
		{
			get
			{
				return this._SupplyThreshold;
			}
			set
			{
				if ((this._SupplyThreshold != value))
				{
					this.OnSupplyThresholdChanging(value);
					this.SendPropertyChanging();
					this._SupplyThreshold = value;
					this.SendPropertyChanged("SupplyThreshold");
					this.OnSupplyThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliverThreshold", DbType="Int")]
		public System.Nullable<int> DeliverThreshold
		{
			get
			{
				return this._DeliverThreshold;
			}
			set
			{
				if ((this._DeliverThreshold != value))
				{
					this.OnDeliverThresholdChanging(value);
					this.SendPropertyChanging();
					this._DeliverThreshold = value;
					this.SendPropertyChanged("DeliverThreshold");
					this.OnDeliverThresholdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="NVarChar(10)")]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this.OnShelfChanging(value);
					this.SendPropertyChanging();
					this._Shelf = value;
					this.SendPropertyChanged("Shelf");
					this.OnShelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bin", DbType="TinyInt")]
		public System.Nullable<byte> Bin
		{
			get
			{
				return this._Bin;
			}
			set
			{
				if ((this._Bin != value))
				{
					this.OnBinChanging(value);
					this.SendPropertyChanging();
					this._Bin = value;
					this.SendPropertyChanged("Bin");
					this.OnBinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="SmallInt NOT NULL")]
		public short Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_ProductInventory", Storage="_Location", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.ProductInventory.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.ProductInventory.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private char _ResourceType;
		
		private string _CardID;
		
		private string _Login;
		
		private System.Nullable<int> _ContactID;
		
		private string _Name;
		
		private string _IPAddress1;
		
		private string _IPAddress2;
		
		private System.DateTime _DateModified;
		
		private System.Nullable<int> _LocationID;
		
		private System.Nullable<char> _EquipmentType;
		
		private System.Nullable<int> _ResourceStatusID;
		
		private bool _IsAdministrator;
		
		private System.Nullable<int> _ResourceStateID;
		
		private System.Nullable<int> _ModeID;
		
		private System.Nullable<int> _TaskId;
		
		private EntityRef<Resource> _Resource2;
		
		private EntityRef<Resource> _Resource1;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Location> _Location;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnResourceTypeChanging(char value);
    partial void OnResourceTypeChanged();
    partial void OnCardIDChanging(string value);
    partial void OnCardIDChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnContactIDChanging(System.Nullable<int> value);
    partial void OnContactIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIPAddress1Changing(string value);
    partial void OnIPAddress1Changed();
    partial void OnIPAddress2Changing(string value);
    partial void OnIPAddress2Changed();
    partial void OnDateModifiedChanging(System.DateTime value);
    partial void OnDateModifiedChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnEquipmentTypeChanging(System.Nullable<char> value);
    partial void OnEquipmentTypeChanged();
    partial void OnResourceStatusIDChanging(System.Nullable<int> value);
    partial void OnResourceStatusIDChanged();
    partial void OnIsAdministratorChanging(bool value);
    partial void OnIsAdministratorChanged();
    partial void OnResourceStateIDChanging(System.Nullable<int> value);
    partial void OnResourceStateIDChanged();
    partial void OnModeIDChanging(System.Nullable<int> value);
    partial void OnModeIDChanged();
    partial void OnTaskIdChanging(System.Nullable<int> value);
    partial void OnTaskIdChanged();
    #endregion
		
		public Resource()
		{
			this._Resource2 = default(EntityRef<Resource>);
			this._Resource1 = default(EntityRef<Resource>);
			this._Contact = default(EntityRef<Contact>);
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="Char(1) NOT NULL")]
		public char ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this.OnResourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourceType = value;
					this.SendPropertyChanged("ResourceType");
					this.OnResourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="NVarChar(50)")]
		public string CardID
		{
			get
			{
				return this._CardID;
			}
			set
			{
				if ((this._CardID != value))
				{
					this.OnCardIDChanging(value);
					this.SendPropertyChanging();
					this._CardID = value;
					this.SendPropertyChanged("CardID");
					this.OnCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(32)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID", DbType="Int")]
		public System.Nullable<int> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(32)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress1", DbType="Char(16)")]
		public string IPAddress1
		{
			get
			{
				return this._IPAddress1;
			}
			set
			{
				if ((this._IPAddress1 != value))
				{
					this.OnIPAddress1Changing(value);
					this.SendPropertyChanging();
					this._IPAddress1 = value;
					this.SendPropertyChanged("IPAddress1");
					this.OnIPAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress2", DbType="Char(16)")]
		public string IPAddress2
		{
			get
			{
				return this._IPAddress2;
			}
			set
			{
				if ((this._IPAddress2 != value))
				{
					this.OnIPAddress2Changing(value);
					this.SendPropertyChanging();
					this._IPAddress2 = value;
					this.SendPropertyChanged("IPAddress2");
					this.OnIPAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime NOT NULL")]
		public System.DateTime DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentType", DbType="Char(1)")]
		public System.Nullable<char> EquipmentType
		{
			get
			{
				return this._EquipmentType;
			}
			set
			{
				if ((this._EquipmentType != value))
				{
					this.OnEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EquipmentType = value;
					this.SendPropertyChanged("EquipmentType");
					this.OnEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceStatusID", DbType="Int")]
		public System.Nullable<int> ResourceStatusID
		{
			get
			{
				return this._ResourceStatusID;
			}
			set
			{
				if ((this._ResourceStatusID != value))
				{
					this.OnResourceStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceStatusID = value;
					this.SendPropertyChanged("ResourceStatusID");
					this.OnResourceStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdministrator", DbType="Bit NOT NULL")]
		public bool IsAdministrator
		{
			get
			{
				return this._IsAdministrator;
			}
			set
			{
				if ((this._IsAdministrator != value))
				{
					this.OnIsAdministratorChanging(value);
					this.SendPropertyChanging();
					this._IsAdministrator = value;
					this.SendPropertyChanged("IsAdministrator");
					this.OnIsAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceStateID", DbType="Int")]
		public System.Nullable<int> ResourceStateID
		{
			get
			{
				return this._ResourceStateID;
			}
			set
			{
				if ((this._ResourceStateID != value))
				{
					this.OnResourceStateIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceStateID = value;
					this.SendPropertyChanged("ResourceStateID");
					this.OnResourceStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModeID", DbType="Int")]
		public System.Nullable<int> ModeID
		{
			get
			{
				return this._ModeID;
			}
			set
			{
				if ((this._ModeID != value))
				{
					this.OnModeIDChanging(value);
					this.SendPropertyChanging();
					this._ModeID = value;
					this.SendPropertyChanged("ModeID");
					this.OnModeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="Int")]
		public System.Nullable<int> TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Resource", Storage="_Resource2", ThisKey="ResourceID", OtherKey="ResourceID", IsUnique=true, IsForeignKey=false)]
		public Resource Resource2
		{
			get
			{
				return this._Resource2.Entity;
			}
			set
			{
				Resource previousValue = this._Resource2.Entity;
				if (((previousValue != value) 
							|| (this._Resource2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource2.Entity = null;
						previousValue.Resource1 = null;
					}
					this._Resource2.Entity = value;
					if ((value != null))
					{
						value.Resource1 = this;
					}
					this.SendPropertyChanged("Resource2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Resource", Storage="_Resource1", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true)]
		public Resource Resource1
		{
			get
			{
				return this._Resource1.Entity;
			}
			set
			{
				Resource previousValue = this._Resource1.Entity;
				if (((previousValue != value) 
							|| (this._Resource1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource1.Entity = null;
						previousValue.Resource2 = null;
					}
					this._Resource1.Entity = value;
					if ((value != null))
					{
						value.Resource2 = this;
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Resource", Storage="_Contact", ThisKey="ContactID", OtherKey="ContactID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Resource.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Resource.Add(this);
						this._ContactID = value.ContactID;
					}
					else
					{
						this._ContactID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Resource", Storage="_Location", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Resource.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Resource.Add(this);
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderHeader")]
	public partial class OrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.DateTime _OrderDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private string _OrderNo;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _Comment;
		
		private int _CustomerID;
		
		private int _DeliveryLocationID;
		
		private char _OrderType;
		
		private string _ObjetDemandeExpress;
		
		private int _OrderStatusID;
		
		private System.Nullable<int> _ProductCategoryID;
		
		private EntitySet<WorkOrder> _WorkOrder;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Location> _Location;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnDeliveryLocationIDChanging(int value);
    partial void OnDeliveryLocationIDChanged();
    partial void OnOrderTypeChanging(char value);
    partial void OnOrderTypeChanged();
    partial void OnObjetDemandeExpressChanging(string value);
    partial void OnObjetDemandeExpressChanged();
    partial void OnOrderStatusIDChanging(int value);
    partial void OnOrderStatusIDChanged();
    partial void OnProductCategoryIDChanging(System.Nullable<int> value);
    partial void OnProductCategoryIDChanged();
    #endregion
		
		public OrderHeader()
		{
			this._WorkOrder = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrder), new Action<WorkOrder>(this.detach_WorkOrder));
			this._Customer = default(EntityRef<Customer>);
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", AutoSync=AutoSync.Always, DbType="VarChar(11) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryLocationID", DbType="Int NOT NULL")]
		public int DeliveryLocationID
		{
			get
			{
				return this._DeliveryLocationID;
			}
			set
			{
				if ((this._DeliveryLocationID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryLocationIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryLocationID = value;
					this.SendPropertyChanged("DeliveryLocationID");
					this.OnDeliveryLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="Char(1) NOT NULL")]
		public char OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjetDemandeExpress", DbType="NVarChar(MAX)")]
		public string ObjetDemandeExpress
		{
			get
			{
				return this._ObjetDemandeExpress;
			}
			set
			{
				if ((this._ObjetDemandeExpress != value))
				{
					this.OnObjetDemandeExpressChanging(value);
					this.SendPropertyChanging();
					this._ObjetDemandeExpress = value;
					this.SendPropertyChanged("ObjetDemandeExpress");
					this.OnObjetDemandeExpressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatusID", DbType="Int NOT NULL")]
		public int OrderStatusID
		{
			get
			{
				return this._OrderStatusID;
			}
			set
			{
				if ((this._OrderStatusID != value))
				{
					this.OnOrderStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OrderStatusID = value;
					this.SendPropertyChanged("OrderStatusID");
					this.OnOrderStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int")]
		public System.Nullable<int> ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this.OnProductCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryID = value;
					this.SendPropertyChanged("ProductCategoryID");
					this.OnProductCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderHeader_WorkOrder", Storage="_WorkOrder", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<WorkOrder> WorkOrder
		{
			get
			{
				return this._WorkOrder;
			}
			set
			{
				this._WorkOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_OrderHeader", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.OrderHeader.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.OrderHeader.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_OrderHeader", Storage="_Location", ThisKey="DeliveryLocationID", OtherKey="LocationID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.OrderHeader.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.OrderHeader.Add(this);
						this._DeliveryLocationID = value.LocationID;
					}
					else
					{
						this._DeliveryLocationID = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrder(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.OrderHeader = this;
		}
		
		private void detach_WorkOrder(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.OrderHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private string _Name;
		
		private System.DateTime _ModifiedDate;
		
		private System.Nullable<int> _LocationTypeID;
		
		private System.Nullable<int> _LocationStatusID;
		
		private EntitySet<ProductInventory> _ProductInventory;
		
		private EntitySet<Resource> _Resource;
		
		private EntitySet<OrderHeader> _OrderHeader;
		
		private EntityRef<Location> _Location2;
		
		private EntityRef<Location> _Location1;
		
		private EntityRef<WorkOrderRouting> _WorkOrderRouting;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnLocationTypeIDChanging(System.Nullable<int> value);
    partial void OnLocationTypeIDChanged();
    partial void OnLocationStatusIDChanging(System.Nullable<int> value);
    partial void OnLocationStatusIDChanged();
    #endregion
		
		public Location()
		{
			this._ProductInventory = new EntitySet<ProductInventory>(new Action<ProductInventory>(this.attach_ProductInventory), new Action<ProductInventory>(this.detach_ProductInventory));
			this._Resource = new EntitySet<Resource>(new Action<Resource>(this.attach_Resource), new Action<Resource>(this.detach_Resource));
			this._OrderHeader = new EntitySet<OrderHeader>(new Action<OrderHeader>(this.attach_OrderHeader), new Action<OrderHeader>(this.detach_OrderHeader));
			this._Location2 = default(EntityRef<Location>);
			this._Location1 = default(EntityRef<Location>);
			this._WorkOrderRouting = default(EntityRef<WorkOrderRouting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					if ((this._Location1.HasLoadedOrAssignedValue || this._WorkOrderRouting.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Char(13) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationTypeID", DbType="Int")]
		public System.Nullable<int> LocationTypeID
		{
			get
			{
				return this._LocationTypeID;
			}
			set
			{
				if ((this._LocationTypeID != value))
				{
					this.OnLocationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LocationTypeID = value;
					this.SendPropertyChanged("LocationTypeID");
					this.OnLocationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationStatusID", DbType="Int")]
		public System.Nullable<int> LocationStatusID
		{
			get
			{
				return this._LocationStatusID;
			}
			set
			{
				if ((this._LocationStatusID != value))
				{
					this.OnLocationStatusIDChanging(value);
					this.SendPropertyChanging();
					this._LocationStatusID = value;
					this.SendPropertyChanged("LocationStatusID");
					this.OnLocationStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_ProductInventory", Storage="_ProductInventory", ThisKey="LocationID", OtherKey="LocationID")]
		public EntitySet<ProductInventory> ProductInventory
		{
			get
			{
				return this._ProductInventory;
			}
			set
			{
				this._ProductInventory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Resource", Storage="_Resource", ThisKey="LocationID", OtherKey="LocationID")]
		public EntitySet<Resource> Resource
		{
			get
			{
				return this._Resource;
			}
			set
			{
				this._Resource.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_OrderHeader", Storage="_OrderHeader", ThisKey="LocationID", OtherKey="DeliveryLocationID")]
		public EntitySet<OrderHeader> OrderHeader
		{
			get
			{
				return this._OrderHeader;
			}
			set
			{
				this._OrderHeader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Location", Storage="_Location2", ThisKey="LocationID", OtherKey="LocationID", IsUnique=true, IsForeignKey=false)]
		public Location Location2
		{
			get
			{
				return this._Location2.Entity;
			}
			set
			{
				Location previousValue = this._Location2.Entity;
				if (((previousValue != value) 
							|| (this._Location2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location2.Entity = null;
						previousValue.Location1 = null;
					}
					this._Location2.Entity = value;
					if ((value != null))
					{
						value.Location1 = this;
					}
					this.SendPropertyChanged("Location2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Location", Storage="_Location1", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public Location Location1
		{
			get
			{
				return this._Location1.Entity;
			}
			set
			{
				Location previousValue = this._Location1.Entity;
				if (((previousValue != value) 
							|| (this._Location1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location1.Entity = null;
						previousValue.Location2 = null;
					}
					this._Location1.Entity = value;
					if ((value != null))
					{
						value.Location2 = this;
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("Location1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrderRouting_Location", Storage="_WorkOrderRouting", ThisKey="LocationID", OtherKey="LocationID", IsForeignKey=true)]
		public WorkOrderRouting WorkOrderRouting
		{
			get
			{
				return this._WorkOrderRouting.Entity;
			}
			set
			{
				WorkOrderRouting previousValue = this._WorkOrderRouting.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrderRouting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrderRouting.Entity = null;
						previousValue.Location = null;
					}
					this._WorkOrderRouting.Entity = value;
					if ((value != null))
					{
						value.Location = this;
						this._LocationID = value.LocationID;
					}
					else
					{
						this._LocationID = default(int);
					}
					this.SendPropertyChanged("WorkOrderRouting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductInventory(ProductInventory entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_ProductInventory(ProductInventory entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Resource(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Resource(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_OrderHeader(OrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_OrderHeader(OrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Order")]
	public partial class V_Order
	{
		
		private int _OrderID;
		
		private string _OrderNo;
		
		private string _EmplacementLivraison;
		
		private char _OrderType;
		
		private string _CustomerFirstName;
		
		private string _CustomerLastName;
		
		private System.DateTime _OrderDate;
		
		private string _ObjetDemandeExpress;
		
		public V_Order()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this._OrderID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this._OrderNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplacementLivraison", DbType="Char(13) NOT NULL", CanBeNull=false)]
		public string EmplacementLivraison
		{
			get
			{
				return this._EmplacementLivraison;
			}
			set
			{
				if ((this._EmplacementLivraison != value))
				{
					this._EmplacementLivraison = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="Char(1) NOT NULL")]
		public char OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this._OrderType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerFirstName", DbType="NVarChar(50)")]
		public string CustomerFirstName
		{
			get
			{
				return this._CustomerFirstName;
			}
			set
			{
				if ((this._CustomerFirstName != value))
				{
					this._CustomerFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerLastName", DbType="NVarChar(50)")]
		public string CustomerLastName
		{
			get
			{
				return this._CustomerLastName;
			}
			set
			{
				if ((this._CustomerLastName != value))
				{
					this._CustomerLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this._OrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjetDemandeExpress", DbType="NVarChar(MAX)")]
		public string ObjetDemandeExpress
		{
			get
			{
				return this._ObjetDemandeExpress;
			}
			set
			{
				if ((this._ObjetDemandeExpress != value))
				{
					this._ObjetDemandeExpress = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
